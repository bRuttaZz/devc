name: "tagged-release"

on:
  push:
    tags:
      - "v*"

jobs:
  tagged-release:
    name: "ReleaseBuild"
    runs-on: "ubuntu-latest"
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: "Build"
      run: |
        bash scripts/build-all-arch.sh
      working-directory: "."
      if: steps.build.outputs.exit_code == 0

    - name: "Test"
      # only testing amd64 and 386 builds, as the github machine do not support others
      run: | 
        set -e
        sudo apt-get install -y buildah
        for exe in devc-v*amd64 devc-v*386 ; do echo -e "\nTesting $exe"; if ! ./$exe --version ; then echo "Error executing : $exe" ; exit 1; fi; done ;
      working-directory: "."
      if: steps.build.outputs.exit_code == 0

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset 386
      id: upload-release-asset-386 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./devc-v*-386
        asset_name: devc-linux-386
        asset_content_type: binary/octet-stream

    - name: Upload Release Asset amd64
      id: upload-release-asset-amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./devc-v*-amd64
        asset_name: devc-linux-amd64
        asset_content_type: binary/octet-stream

    - name: Upload Release Asset arm
      id: upload-release-asset-arm
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./devc-v*-arm
        asset_name: devc-linux-arm
        asset_content_type: binary/octet-stream

    - name: Upload Release Asset arm64
      id: upload-release-asset-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./devc-v*-arm64
        asset_name: devc-linux-arm64
        asset_content_type: binary/octet-stream
